{"version":3,"sources":["src/react-dom/dom.js","src/react-dom/render.js","src/react-dom/diff.js","src/react/component.js","src/react/create-element.js","src/react/index.js","src/react-dom/index.js","index.js"],"names":["setAttribute","dom","name","value","test","toLowerCase","style","cssText","removeAttribute","_render","vnode","undefined","String","tag","component","attrs","base","textNode","document","createTextNode","createElement","Object","keys","forEach","key","children","child","render","container","innnerHTML","appendChild","diff","ret","diffNode","parentNode","out","nodeType","textContent","replaceChild","diffComponent","isSameNodeType","childNodes","map","length","diffChildren","diffAttributes","vchildren","domChildren","keyed","index","push","min","childrenLen","vchild","c","f","nextSibling","removeNode","insertBefore","_component","oldDom","constructor","setComponentProps","unmountComponent","createComponent","nodeName","old","attributes","attr","renderComponent","renderer","componentWillUpdate","componentDidUpdate","componentDidMount","props","componentWillMount","compoentWillReceiveProps","inst","prototype","Component","componentWillUnmount","state","stateChange","assign","App","React","Conuter","num","console","log","setState","onClick","ReactDOM","getElementById"],"mappings":";;AOAA;;AACA;;;ADDA,AHAA,ACAA,ACAA;AJAA,AGCA;AJDO,AIEP,ACDA,SLDgBA,YAAT,CAAsBC,GAAtB,EAA2BC,IAA3B,EAAiCC,KAAjC,EAAwC;AEA/C,AFCI,ACAJ,AGEA;AJDI,AIEJ,MJFQD,IAAI,KAAK,AMAF,WNAX,EAA0B;AED9B,AFEQA,AMAJyB,ALDG,AGGP,EEFIA,ENAIzB,IAAI,AMAF,CLDMO,AGGPW,CEFLO,CNAW,KCDR,CAAiBjB,CDChB,ICDD,AGGP,CAAwBG,CHHO,EGG/B,EAA6BE,KAA7B,EAAiD;AJD5C,AMFU,ALCX,AGIAA,EAAAA,CJP2C,CAK3C,ECFIL,CGIC,GAAGK,CHJC,IGII,ACJF,CJAGJ,GGIG,EAAjB,IHJI,IAAuBD,KAAK,KAAK,IAAjC,IAAyC,OAAOA,KAAP,KAAiB,SAA9D,EAAyE;ACD7E,ADEQA,AIAJqE,EAAAA,EJAIrE,KAAK,EIAA,CJAG,CIAZqE,CJAI,iBIDO;AJEV,AGA4C,ACA7C3D,EAAAA,EFJE2D,WEIW,EAAb3D,mBDAmCK,QAAU;AJC7C,AGJA,ACGmCA,ACFxB,IDEwBA,EJC/B,MIDyC,EJCjCrB,IAAR,CAAaF,IAAb,CAAJ,EAAwB;AACpBA,ACDJ,AEHA,ACE6C,IJEzCA,ECDA,EDCI,GAAGA,ECDAQ,EDCI,CAACL,ECDZ,KAAiB,IDCV,EAAP,ECDJ,EAA+B;ADE3BJ,ACDAS,AEHJ,IHIIT,ACDAS,GDCG,CAACR,CCDC,GDCF,ACDKU,CDCR,GAAYT,ECDE,CAACO,EDCE,GCDH,CDCO,ACDrB,EDCA,CAFoB,CAGpB;AACH,ACFA,AEHD,ACIA,GJHA,ACJ2B,CAQ3B,KDAO,AIDA,IJCIR,IAAI,KAAK,CGLI,MHKjB,EAAsB;AACzB,ACAJ,AENwB,ACKpBW,IAAAA,GAAG,CJCC,AGNI6D,CHMHvE,AIDLU,GADG,CDJiB,CHMhB,IAAU,OAAOV,KAAP,KAAiB,QAA/B,EAAyC,uCGNzB,EAAI;AHOhBF,ACAR,AGDIc,IAAAA,EJCId,GAAG,AIDF,CJCGK,CIDRS,IJCI,CAAUR,AIHX,OJGC,GAAoBJ,KAAK,IAAI,EAA7B;AACH,ACAL,AERwB,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","file":"simple-react.e31bb0bc.js","sourceRoot":"..","sourcesContent":["export function setAttribute(dom, name, value) {\r\n    // 如果属性名是className，则返回class\r\n    if (name === 'className') {\r\n        name = 'class';\r\n    }\r\n    // 如果属性名是onXXX，则是一个监听方法\r\n    if (/on\\w+/.test(name)) {\r\n        name = name.toLowerCase();\r\n        dom[name] = value || '';\r\n        // 如果属性名style，则更新style对象\r\n    } else if (name === 'style') {\r\n        if (!value || typeof value === 'string') {\r\n            dom.style.cssText = value || '';\r\n        } else if (value && typeof value === 'object') {\r\n            for (let name in value) {\r\n                // 可以通过style={ width: 20 }这种形式来设置样式，可以省略掉单位px\r\n                dom.style[name] = typeof value[ name ] === 'number' ? value[ name ] + 'px' : value[ name ];\r\n            }\r\n        }\r\n        // 普通属性则直接更新属性\r\n    } else {\r\n        if (name in dom) {\r\n            dom[ name ] = value || '';\r\n        }\r\n        if (value) {\r\n            dom.setAttribute(name, value);\r\n        } else {\r\n            dom.removeAttribute(name);\r\n        }\r\n    }\r\n}","import { createComponent, setComponentProps } from './diff';\r\nimport { setAttribute } from './dom';\r\nexport function _render(vnode) {\r\n    if (vnode === undefined || vnode === null || typeof vnode === 'boolean') { \r\n        vnode = '';\r\n    }\r\n    if (typeof vnode === 'number') {\r\n        vnode = String(vnode);\r\n    }\r\n\r\n    // function Welcome( props ) {\r\n    //     return <h1>Hello, {props.name}</h1>;\r\n    // }\r\n    // tag 是 Welcome\r\n    // 区分组件和原生DOM的工作，是babel-plugin-transform-react-jsx帮我们做的\r\n    if (typeof vnode.tag === 'function') {\r\n        // createComponent方法创建组件实例，并且将函数定义组件扩展为类定义组件进行处理\r\n        const component = createComponent(vnode.tag, vnode.attrs);\r\n        setComponentProps(component, vnode.attrs);\r\n        return component.base;\r\n    }\r\n    // 当vnode为字符串时，渲染结果是一段文本\r\n    if (typeof vnode === 'string' || typeof vnode === 'number') {\r\n        let textNode = document.createTextNode(vnode)\r\n        return textNode;\r\n    }\r\n\r\n    const dom = document.createElement(vnode.tag);\r\n\r\n    if (vnode.attrs) {\r\n        Object.keys(vnode.attrs).forEach(key => {\r\n            const value = vnode.attrs[key];\r\n            setAttribute(dom, key, value); // 设置属性\r\n        });\r\n    }\r\n    vnode.children.forEach(child => render(child, dom)); // 递归渲染子节点\r\n\r\n    return dom; \r\n}\r\n/* \r\n    render的第一个参数接收的是createElement返回的对象\r\n    第二个参数是挂载的目标DOM\r\n    render的作用就是将虚拟DOM渲染成真实的DOM\r\n*/\r\nfunction render (vnode, container) {\r\n    container.innnerHTML = '';\r\n    // 将渲染结果挂载到真正的DOM上\r\n    return container.appendChild(_render(vnode));\r\n}\r\n\r\nexport default render","import { Componet } from '../react'\r\nimport { setAttribute } from './dom';\r\nimport {_render} from './render'\r\n\r\n\r\n/**\r\n * @param {HTMLElement} dom 真实DOM\r\n * @param {vnode} vnode 虚拟DOM\r\n * @param {HTMLElement} container 容器\r\n * @returns {HTMLElement} 更新后的DOM\r\n**/\r\n// 对比虚拟DOM和真是DOM最后返回更新后的DOM\r\n// diff的初衷：每次更新都重新渲染整个应用或者整个组件，DOM操作消耗性能很严重\r\n// 为了减少DOM更新带来的性能消耗，找到渲染前后真正变化的部分，只更新这一部分DOM\r\n\r\nexport function diff(dom, vnode, container) {\r\n    const ret = diffNode( dom, vnode );\r\n\r\n    if ( container && ret.parentNode !== container ) {\r\n        container.appendChild( ret );\r\n    }\r\n\r\n    return ret;\r\n}\r\n/* \r\n    diffNode\r\n    对比节点自身\r\n*/\r\nfunction diffNode(dom, vnode) {\r\n    let out = dom;\r\n    if ( vnode === undefined || vnode === null || typeof vnode === 'boolean' ) vnode = '';\r\n\r\n    if ( typeof vnode === 'number' ) vnode = String( vnode );\r\n\r\n    // diff text node\r\n    if (typeof vnode === \"string\") {\r\n        // 当前DOM节点是文本节点，直接更新内容\r\n        // nodeType: https://developer.mozilla.org/zh-CN/docs/Web/API/Node/nodeType\r\n        if (dom && dom.nodeType === 3) {\r\n            if (dom.textContent !== vnode) {\r\n                dom.textContent = vnode;\r\n            }\r\n        // 如果DOM不是文本节点，则新建一个文本节点DOM，并移除掉原来的\r\n        } else {\r\n            out = document.createTextNode(vnode);\r\n            if (dom && dom.parentNode) {\r\n                dom.parentNode.replaceChild(out, dom);\r\n            }\r\n        }\r\n        // 文本节点非常简单没有属性，没有子元素\r\n        return out;\r\n    }\r\n\r\n    if (typeof vnode.tag === 'function') {\r\n        return diffComponent(dom, vnode);\r\n    }\r\n\r\n    // 情况一：如果真实DOM不存在，表示此节点是新增的，或者新旧两个节点的类型不一样，\r\n    // 那么就新建一个DOM元素，并将原来的子节点（如果有的话）移动到新建的DOM节点下。\r\n    if (!dom || !isSameNodeType( dom, vnode )) {\r\n        out = document.createElement(vnode.tag);\r\n        \r\n        // 不是同一类型的dom\r\n        if (dom) {\r\n            // 将原来的子节点移到新节点下\r\n            [...dom.childNodes ].map(out.appendChild);\r\n\r\n            if (dom.parentNode) {\r\n                // 移除掉原来的DOM对象\r\n                dom.parentNode.replaceChild(out, dom);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    // 情况二：如果真实DOM存在，并且和虚拟DOM是同一类型的，那我们暂时不需要做别的，\r\n    // 只需要等待后面对比属性和对比子节点。\r\n    if ( vnode.children && vnode.children.length > 0 || ( out.childNodes && out.childNodes.length > 0 ) ) {\r\n        diffChildren( out, vnode.children );\r\n    }\r\n\r\n    diffAttributes( out, vnode );\r\n\r\n    return out;\r\n}\r\n/* \r\n    diffChildren\r\n    对比子节点\r\n*/\r\nfunction diffChildren(dom, vchildren) {\r\n    // 对比子节点时，子节点是一个数组，它们可能改变了顺序，数量。很难确定要和虚拟DOM对比的是哪一个\r\n    // 这里就要为每一个子节点设一个key，重新渲染时对比key值相同的节点\r\n    const domChildren = dom.childNodes;\r\n    const children = [];\r\n\r\n    const keyed = {};\r\n\r\n    // 将有key的节点和没有key的节点分开\r\n    if (domChildren.length > 0) {\r\n        for (let index = 0; index < domChildren.length; index++) {\r\n            const child = domChildren[index];\r\n            const key = child.key;\r\n            if (key) {\r\n                keyed[key] = child;\r\n            } else {\r\n                children.push(child);\r\n            }\r\n        }\r\n    }\r\n\r\n    // 虚拟DOM的children\r\n    if (vchildren && vchildren.length > 0) {\r\n        let min = 0;\r\n        let childrenLen = children.length;\r\n\r\n        for (let index = 0; index < vchildren.length; index++) {\r\n            const vchild = vchildren[index];\r\n            const key = vchild.key;\r\n            let child;\r\n\r\n            // 如果有key的话，找到对应key值的节点\r\n            if (key) {\r\n                if (keyed[key]) {\r\n                    child = keyed[key];\r\n                    keyed[key] = undefined;\r\n                }\r\n            } else if (min < childrenLen) {\r\n                for (let index = min; index < childrenLen; index++) {\r\n                    let c = children[index];\r\n                    if (c && isSameNodeType( c, vchild )) {\r\n                        child = c;\r\n                        children[index] = undefined;\r\n                        if (index === childrenLen -1 ) {\r\n                            childrenLen--;\r\n                        }\r\n                        if (index === min) {\r\n                            min++;\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // 对比\r\n            child = diff(child, vchild);\r\n\r\n            // 更新DOM\r\n            const f = domChildren[index];\r\n            if (child && child !== dom && child !== f) {\r\n                // 如果更新前的对应位置为空，说明此节点时新增的\r\n                if (!f) {\r\n                    dom.appendChild(child);\r\n                // 如果更新后的节点和更新前对应位置的下一个节点一样，说明当前位置的节点被移除了\r\n                } else if (child === f.nextSibling) {\r\n                    removeNode(f);\r\n                // 将更新后的节点移动到正确的位置\r\n                } else {\r\n                    // 注意insertBefore的用法，第一个参数是要插入的节点，第二个参数是已存在的节点\r\n                    dom.insertBefore(child, f);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n/* \r\n    diffComponent\r\n    对比组件\r\n*/\r\nfunction diffComponent(dom, vnode) {\r\n    let c = dom && dom._component;\r\n    let oldDom = dom;\r\n\r\n    // 如果组件类型没有变化则重新set props\r\n    if (c && c.constructor === vnode.tag) {\r\n        setComponentProps(c, vnode.attrs);\r\n        dom = c.base;\r\n        // 如果组件类型变化，则移除掉原来组件，并渲染新的组件\r\n    } else {\r\n        if (c) {\r\n            unmountComponent(c);\r\n            oldDom = null;\r\n        }\r\n\r\n        c = createComponent(vnode.tag, vnode.attrs);\r\n\r\n        setComponentProps(c, vnode.attrs);\r\n        dom = c.base;\r\n\r\n        if (oldDom && dom !== oldDom) {\r\n            oldDom._component = null;\r\n            removeNode(oldDom);\r\n        }\r\n    }\r\n    return dom;\r\n}\r\nfunction isSameNodeType( dom, vnode ) {\r\n    if ( typeof vnode === 'string' || typeof vnode === 'number' ) {\r\n        return dom.nodeType === 3;\r\n    }\r\n\r\n    if ( typeof vnode.tag === 'string' ) {\r\n        return dom.nodeName.toLowerCase() === vnode.tag.toLowerCase();\r\n    }\r\n\r\n    return dom && dom._component && dom._component.constructor === vnode.tag;\r\n}\r\n/* \r\n    diffAttributes\r\n    对比节点属性\r\n*/\r\nfunction diffAttributes( dom, vnode ) {\r\n    // diff算法不仅要找出节点类型的变化，还要找出节点的属性以及事件监听的变化\r\n    const old = {}; // 当前DOM的属性\r\n    const attrs = vnode.attrs; // 虚拟DOM的属性\r\n    // 添加新的属性\r\n    for (let index = 0; index < dom.attributes.length; index++) {\r\n        const attr = dom.attributes[index];\r\n        old[attr.name] = attr.value;\r\n    }\r\n\r\n    // 如果原来的属性不在新属性当中，则将其移除掉\r\n    for (let name in old) {\r\n        if (!(name in attrs)) {\r\n            setAttribute(dom, name, undefined);\r\n        }\r\n    }\r\n\r\n    // 更新新的属性值\r\n    for (let name in attrs) {\r\n        if (old[name] !== attrs[name]) {\r\n            setAttribute(dom, name, attrs[name]);\r\n        }\r\n    }\r\n}\r\nexport function renderComponent(component) {\r\n    let base;\r\n    // 调用组件的render函数返回dom对象\r\n    const renderer = component.render();\r\n    if (component.base && component.componentWillUpdate) {\r\n        component.componentWillUpdate();\r\n    }\r\n    // base = _render(renderer);\r\n    base = diff(component.base, renderer);\r\n    \r\n\r\n    if ( component.base ) {\r\n        if ( component.componentDidUpdate ) component.componentDidUpdate();\r\n    } else if ( component.componentDidMount ) {\r\n        component.componentDidMount();\r\n    }\r\n\r\n    // if ( component.base && component.base.parentNode ) {\r\n    //     component.base.parentNode.replaceChild( base, component.base );\r\n    // }\r\n\r\n    // component.base保存组件实例最终渲染出来的DOM\r\n    // 反过来base._component保存的是dom对象所对应的组件，这个就是为了把他们关联起来\r\n    component.base = base;\r\n    base._component = component;\r\n}\r\nexport function setComponentProps(component, props) {\r\n    if (!component.base) {\r\n        if (component.componentWillMount) {\r\n            component.componentWillMount();\r\n        } else if (component.compoentWillReceiveProps) {\r\n            component.compoentWillReceiveProps();\r\n        }\r\n\r\n        component.props = props;\r\n        // renderComponent方法用来渲染组件，setState方法会直接调用这个方法进行重新渲染\r\n        // 在这个方法里可以实现componentWillUpdate, componentDidUpdate, componentDidMount\r\n        renderComponent(component);\r\n    }\r\n}\r\nexport function createComponent(component, props) {\r\n    let inst;\r\n    // 如果是类定义组件，则直接返回实例\r\n    if (component.prototype && component.prototype.render) {\r\n        inst = new component(props);\r\n        // 如果是函数定义组件，则将其扩展为类定义组件\r\n    } else {\r\n        inst = new Component(props);\r\n        inst.constructor = component;\r\n        inst.render = function () {\r\n            return this.constructor(props);\r\n        }\r\n    }\r\n    return inst;\r\n}\r\nfunction unmountComponent( component ) {\r\n    if ( component.componentWillUnmount ) component.componentWillUnmount();\r\n    removeNode( component.base);\r\n}","import { renderComponent } from '../react-dom/diff';\r\nclass Component {\r\n    // 通过继承React.Component定义的组件有自己的私有状态state可以通过this.state获取到\r\n    // 同时也能通过this.props来获取传入的数据\r\n    // 所以在构造函数中，需要初始化state和props\r\n    constructor(props = {}) {\r\n        this.state = {};\r\n        this.props = props;\r\n    }\r\n    // 组件内部的state和渲染相关，state改变时通常会出发渲染，为了让react\r\n    // 直到我们改变了state，我们只能通过setState方法修改数据\r\n    setState(stateChange) {\r\n        // 将修改合并到state\r\n        Object.assign(this.state, stateChange);\r\n        // 在每次更新state后，需要调用renderComponent方法重新渲染组件\r\n        renderComponent(this);\r\n    }\r\n}\r\nexport default Component;","/* \r\n    React.createElement\r\n    jsx片段会被转译成用React.createElement方法包裹的代码\r\n    返回一个对象来保存它的信息\r\n*/\r\nfunction createElement (tag, attrs, ...children) {\r\n\r\n    attrs = attrs || {};\r\n\r\n    return {\r\n        tag,\r\n        attrs,\r\n        children\r\n    }\r\n}\r\n\r\nexport default createElement;","import Component from './component.js';\r\nimport createElement from './create-element.js'\r\n\r\nexport default {\r\n    Component,\r\n    createElement\r\n}","import render from './render'\r\n\r\nexport default {\r\n    render\r\n}\r\n","import React from './src/react';\r\nimport ReactDOM from './src/react-dom';\r\n\r\nclass App extends React.Component {\r\n    render() { \r\n        return <h1>Hello World</h1>;\r\n    }\r\n}\r\n\r\nclass Conuter extends React.Component {\r\n    constructor( props ) {\r\n        super( props );\r\n        this.state = {\r\n            num: 0\r\n        }\r\n    }\r\n    componentWillUpdate() {\r\n        console.log( 'update' );\r\n    }\r\n\r\n    componentWillMount() {\r\n        console.log( 'mount' );\r\n    }\r\n\r\n    onClick() {\r\n        this.setState( { num: this.state.num + 1 } );\r\n    }\r\n\r\n    render() { \r\n        return (  \r\n            <div onClick={ () => this.onClick() }>\r\n                <h1>number: {this.state.num}</h1>\r\n                <button>add</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(<Conuter />, document.getElementById('root'));"]}